{"version":3,"sources":["logo.svg","Componenets/nav-bar.jsx","Componenets/nav-link.jsx","Componenets/Side-Bar.jsx","Componenets/formElement.jsx","Componenets/form.jsx","Componenets/contentPage.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","NavBar","state","react_default","a","createElement","className","href","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","role","aria-haspopup","aria-labelledby","onClick","this","props","onEdit","placeholder","Component","NavLink","linkText","SideBar","navLinks","_this","sideBar","map","i","nav_link","key","FormTextInput","for","labelName","onChange","value","FormControl","handleTextChange","event","setState","target","formElement","ContentPage","Componenets_form","App","handleEdit","e","preventDefault","console","log","nav_bar","Side_Bar","contentPage","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.6370f8f9.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { Component } from \"react\";\r\n\r\nclass NavBar extends Component {\r\n  state = {};\r\n\r\n  render() {\r\n    return (\r\n      <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\r\n        <a className=\"navbar-brand\" href=\"#\">\r\n          Navbar\r\n        </a>\r\n        <button\r\n          className=\"navbar-toggler\"\r\n          type=\"button\"\r\n          data-toggle=\"collapse\"\r\n          data-target=\"#navbarSupportedContent\"\r\n          aria-controls=\"navbarSupportedContent\"\r\n          aria-expanded=\"false\"\r\n          aria-label=\"Toggle navigation\"\r\n        >\r\n          <span className=\"navbar-toggler-icon\" />\r\n        </button>\r\n\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n          <ul className=\"navbar-nav mr-auto\">\r\n            <li className=\"nav-item active\">\r\n              <a className=\"nav-link\" href=\"#\">\r\n                Home <span className=\"sr-only\">(current)</span>\r\n              </a>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <a className=\"nav-link\" href=\"#\">\r\n                Link\r\n              </a>\r\n            </li>\r\n            <li className=\"nav-item dropdown\">\r\n              <a\r\n                className=\"nav-link dropdown-toggle\"\r\n                href=\"#\"\r\n                id=\"navbarDropdown\"\r\n                role=\"button\"\r\n                data-toggle=\"dropdown\"\r\n                aria-haspopup=\"true\"\r\n                aria-expanded=\"false\"\r\n              >\r\n                Dropdown\r\n              </a>\r\n              <div className=\"dropdown-menu\" aria-labelledby=\"navbarDropdown\">\r\n                <a className=\"dropdown-item\" href=\"#\">\r\n                  Action\r\n                </a>\r\n                <a className=\"dropdown-item\" href=\"#\">\r\n                  Another action\r\n                </a>\r\n                <div className=\"dropdown-divider\" />\r\n                <a className=\"dropdown-item\" href=\"#\">\r\n                  Something else here\r\n                </a>\r\n              </div>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <a className=\"nav-link\" href=\"#\" onClick={this.props.onEdit}>\r\n                Edit\r\n              </a>\r\n            </li>\r\n          </ul>\r\n          <form className=\"form-inline my-2 my-lg-0\">\r\n            <input\r\n              className=\"form-control mr-sm-2\"\r\n              type=\"search\"\r\n              placeholder=\"Search\"\r\n              aria-label=\"Search\"\r\n            />\r\n            <button\r\n              className=\"btn btn-outline-success my-2 my-sm-0\"\r\n              type=\"submit\"\r\n            >\r\n              Search\r\n            </button>\r\n          </form>\r\n        </div>\r\n      </nav>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NavBar;\r\n","import React, { Component } from \"react\";\r\n\r\nclass NavLink extends Component {\r\n  state = {};\r\n  render() {\r\n    return (\r\n      <a className=\"nav-link\" href=\"#\">\r\n        {this.props.linkText}\r\n      </a>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NavLink;\r\n","import React, { Component } from \"react\";\r\nimport NavLink from \"./nav-link\";\r\n\r\nclass SideBar extends Component {\r\n  state = {};\r\n  navLinks = () =>\r\n    this.props.sideBar.map(i => <NavLink key={i} linkText={i} />);\r\n\r\n  render() {\r\n    return (\r\n      <nav className=\"nav flex-column\">\r\n        <a className=\"nav-link active\" href=\"#\">\r\n          Active\r\n        </a>\r\n        {this.navLinks()}\r\n        <NavLink linkText=\"Hello\" />\r\n        <a className=\"nav-link\" href=\"#\">\r\n          Link\r\n        </a>\r\n        <a className=\"nav-link\" href=\"#\">\r\n          Link\r\n        </a>\r\n        <a className=\"nav-link disabled\" href=\"#\">\r\n          Disabled\r\n        </a>\r\n      </nav>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SideBar;\r\n","import React, { Component } from \"react\";\r\n\r\nclass FormTextInput extends Component {\r\n  state = {};\r\n  render() {\r\n    return (\r\n      <div className=\"form-group\">\r\n        <label for={this.props.id}>{this.props.labelName}</label>\r\n        <input\r\n          onChange={this.props.onChange}\r\n          value={this.props.value}\r\n          type=\"text\"\r\n          className=\"form-control\"\r\n          id={this.props.id}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default FormTextInput;\r\n","import React, { Component } from \"react\";\r\nimport FormTextInput from \"./formElement\";\r\n\r\nclass FormControl extends Component {\r\n  state = { value: \"\" };\r\n  handleTextChange = event => this.setState({ value: event.target.value });\r\n  render() {\r\n    return (\r\n      <form>\r\n        <FormTextInput\r\n          onChange={this.handleTextChange}\r\n          id=\"Name\"\r\n          labelName=\"Name\"\r\n          value={this.state.value}\r\n        />\r\n        <div className=\"form-group form-check\">\r\n          <input\r\n            type=\"checkbox\"\r\n            className=\"form-check-input\"\r\n            id=\"exampleCheck1\"\r\n          />\r\n          <label className=\"form-check-label\" for=\"exampleCheck1\">\r\n            Check me out\r\n          </label>\r\n        </div>\r\n        <button type=\"submit\" className=\"btn btn-primary\">\r\n          Submit\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default FormControl;\r\n","import React, { Component } from \"react\";\r\nimport FormControl from \"./form\";\r\n\r\nclass ContentPage extends Component {\r\n  state = {};\r\n  render() {\r\n    return <FormControl />;\r\n  }\r\n}\r\n\r\nexport default ContentPage;\r\n","import React, { Component } from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport NavBar from \"./Componenets/nav-bar\";\nimport SideBar from \"./Componenets/Side-Bar\";\nimport ContentPage from \"./Componenets/contentPage\";\n\nclass App extends Component {\n  state = {\n    sideBar: []\n  };\n\n  handleEdit = e => {\n    e.preventDefault();\n    const sideBar = [\"Add Person\", \"Add Post\"];\n    this.setState({ sideBar });\n    console.log(\"Edit clicked\");\n  };\n  render() {\n    return (\n      <div>\n        <div className=\"container-fluid heading\">\n          <div className=\"heading1\">Central Bureau of Narcotics</div>\n          <div className=\"heading2\">Establishment Section</div>\n        </div>\n\n        <NavBar onEdit={this.handleEdit} />\n        <div className=\"container-fluid\">\n          <div className=\"row\">\n            <div className=\"col side-bar\">\n              <SideBar sideBar={this.state.sideBar} />\n            </div>\n            <div className=\"col-10\">\n              <ContentPage />\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport NavBar from \"./Componenets/nav-bar\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}